<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Build\arducopter.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Build\arducopter.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sun Dec 23 22:02:26 2018
<BR><P>
<H3>Maximum Stack Usage =        356 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler &rArr; HAL_SYSTICK_Callback &rArr; timer_cb &rArr; Sbus_Parser &rArr; __aeabi_memclr4
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[90]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[22]">CAN1_RX0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[23]">CAN1_RX1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[24]">CAN1_SCE_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[21]">CAN1_TX_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4e]">CAN2_RX0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4f]">CAN2_RX1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[50]">CAN2_SCE_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4d]">CAN2_TX_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[75]">CAN3_RX0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[76]">CAN3_RX1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[77]">CAN3_SCE_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[74]">CAN3_TX_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6b]">CEC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5c]">DCMI_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6f]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[70]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[71]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[72]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream4_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream6_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3d]">DMA1_Stream7_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[67]">DMA2D_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream4_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream6_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream7_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4b]">ETH_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4c]">ETH_WKUP_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[14]">EXTI0_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[36]">EXTI15_10_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[15]">EXTI1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[16]">EXTI2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[17]">EXTI3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[18]">EXTI4_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[25]">EXTI9_5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3e]">FMC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5e]">FPU_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2e]">I2C1_ER_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2d]">I2C1_EV_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[30]">I2C2_ER_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2f]">I2C2_EV_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[57]">I2C3_ER_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[56]">I2C3_EV_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6d]">I2C4_ER_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6c]">I2C4_EV_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[78]">JPEG_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6a]">LPTIM1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[66]">LTDC_ER_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[65]">LTDC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[79]">MDIOS_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[51]">OTG_FS_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[38]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[59]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5b]">OTG_HS_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5a]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[f]">PVD_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[69]">QUADSPI_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[13]">RCC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5d]">RNG_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[37]">RTC_Alarm_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[11]">RTC_WKUP_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[64]">SAI1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[68]">SAI2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3f]">SDMMC1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[73]">SDMMC2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[6e]">SPDIF_RX_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[31]">SPI1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[32]">SPI2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[41]">SPI3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[61]">SPI4_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[62]">SPI5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[63]">SPI6_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from stm32f765_it.o(i.SysTick_Handler) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[10]">TAMP_STAMP_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[26]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[29]">TIM1_CC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[28]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[27]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2a]">TIM2_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2b]">TIM3_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[2c]">TIM4_IRQHandler</a> from drv_ppm.o(i.TIM4_IRQHandler) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[40]">TIM5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[44]">TIM6_DAC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[45]">TIM7_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[39]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3c]">TIM8_CC_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3b]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[3a]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[42]">UART4_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[43]">UART5_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[5f]">UART7_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[60]">UART8_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[33]">USART1_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[34]">USART2_IRQHandler</a> from stm32f765_it.o(i.USART2_IRQHandler) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[35]">USART3_IRQHandler</a> from stm32f765_it.o(i.USART3_IRQHandler) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[55]">USART6_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[e]">WWDG_IRQHandler</a> from startup_stm32f765xx.o(.text) referenced from startup_stm32f765xx.o(RESET)
 <LI><a href="#[7b]">__main</a> from __main.o(!!!main) referenced from startup_stm32f765xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[13c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[13d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[13e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[85]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[80]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[13f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[140]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[141]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[142]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[143]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[144]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[145]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[146]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[147]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[148]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[149]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[14f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[150]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[151]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[152]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[153]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[154]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[155]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[156]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[157]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[158]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[159]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[7d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[15a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[82]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[84]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[15b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[86]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Board_Init &rArr; SD_Init &rArr; HAL_SD_WideBusOperation_Config &rArr; SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[15c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[91]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[89]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[15d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[8b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CAN3_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>CAN3_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>CAN3_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CAN3_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f765xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f765xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15e]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
</UL>

<P><STRONG><a name="[8d]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[15f]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[160]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sbus_Parser
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[88]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[92]"></a>BMI055_Acc_Chip_Identification</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drv_bmi055.o(i.BMI055_Acc_Chip_Identification))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BMI055_Acc_Chip_Identification &rArr; SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_CHIP_Identification
</UL>

<P><STRONG><a name="[95]"></a>BMI055_CHIP_Identification</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_bmi055.o(i.BMI055_CHIP_Identification))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BMI055_CHIP_Identification &rArr; BMI055_Gyro_Chip_Identification &rArr; SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Gyro_Chip_Identification
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Acc_Chip_Identification
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[96]"></a>BMI055_Gyro_Chip_Identification</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_bmi055.o(i.BMI055_Gyro_Chip_Identification))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BMI055_Gyro_Chip_Identification &rArr; SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_CHIP_Identification
</UL>

<P><STRONG><a name="[97]"></a>BMI055_Init</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, drv_bmi055.o(i.BMI055_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BMI055_Init &rArr; SPI_BMI055_AccWriterReg &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BMI055_AccWriterReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[9a]"></a>BMI055_Read_Data</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, drv_bmi055.o(i.BMI055_Read_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BMI055_Read_Data &rArr; SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_2ms
</UL>

<P><STRONG><a name="[9c]"></a>Board_Init</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, copter.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Board_Init &rArr; SD_Init &rArr; HAL_SD_WideBusOperation_Config &rArr; SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_PWM_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sbus_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTRrgb_LED_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Detect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_CHIP_Identification
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>Cache_Enable</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, sys.o(i.Cache_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cache_Enable &rArr; SCB_EnableDCache
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[b3]"></a>Communicate_DT_Data_Exchange</STRONG> (Thumb, 860 bytes, Stack size 32 bytes, ano_protocol.o(i.Communicate_DT_Data_Exchange))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Communicate_DT_Data_Exchange &rArr; Communicate_DT_Send_Status &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Version
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_User
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Status
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Speed
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Senser2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Senser
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Msg
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_1ms
</UL>

<P><STRONG><a name="[bd]"></a>Communicate_DT_Data_Receive_Anl</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, ano_protocol.o(i.Communicate_DT_Data_Receive_Anl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communicate_DT_Data_Receive_Anl
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Receive_Prepare
</UL>

<P><STRONG><a name="[bc]"></a>Communicate_DT_Data_Receive_Prepare</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, ano_protocol.o(i.Communicate_DT_Data_Receive_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Communicate_DT_Data_Receive_Prepare &rArr; Communicate_DT_Data_Receive_Anl
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Receive_Anl
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[b5]"></a>Communicate_DT_Send_Check</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ano_protocol.o(i.Communicate_DT_Send_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Communicate_DT_Send_Check &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[be]"></a>Communicate_DT_Send_Data</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ano_protocol.o(i.Communicate_DT_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Version
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_User
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Status
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Speed
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Senser2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Senser
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Msg
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Check
</UL>

<P><STRONG><a name="[b4]"></a>Communicate_DT_Send_Msg</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ano_protocol.o(i.Communicate_DT_Send_Msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Communicate_DT_Send_Msg &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[ba]"></a>Communicate_DT_Send_Senser</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, ano_protocol.o(i.Communicate_DT_Send_Senser))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Communicate_DT_Send_Senser &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[bb]"></a>Communicate_DT_Send_Senser2</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ano_protocol.o(i.Communicate_DT_Send_Senser2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Communicate_DT_Send_Senser2 &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[b8]"></a>Communicate_DT_Send_Speed</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, ano_protocol.o(i.Communicate_DT_Send_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Communicate_DT_Send_Speed &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[b7]"></a>Communicate_DT_Send_Status</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, ano_protocol.o(i.Communicate_DT_Send_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Communicate_DT_Send_Status &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[b9]"></a>Communicate_DT_Send_User</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ano_protocol.o(i.Communicate_DT_Send_User))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Communicate_DT_Send_User &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[b6]"></a>Communicate_DT_Send_Version</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ano_protocol.o(i.Communicate_DT_Send_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Communicate_DT_Send_Version &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>

<P><STRONG><a name="[ab]"></a>FM25V01G_Detect</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, drv_fm25v01g.o(i.FM25V01G_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = FM25V01G_Detect &rArr; FM25V01G_WriteMemory &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteMemory
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteByte
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadMemory
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[c3]"></a>FM25V01G_ReadByte</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, drv_fm25v01g.o(i.FM25V01G_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FM25V01G_ReadByte &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
</UL>

<P><STRONG><a name="[c4]"></a>FM25V01G_ReadMemory</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, drv_fm25v01g.o(i.FM25V01G_ReadMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FM25V01G_ReadMemory &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
</UL>

<P><STRONG><a name="[c1]"></a>FM25V01G_WriteByte</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, drv_fm25v01g.o(i.FM25V01G_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FM25V01G_WriteByte &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
</UL>

<P><STRONG><a name="[c2]"></a>FM25V01G_WriteMemory</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, drv_fm25v01g.o(i.FM25V01G_WriteMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FM25V01G_WriteMemory &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
</UL>

<P><STRONG><a name="[d5]"></a>GPIO_AF_Set</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, sys.o(i.GPIO_AF_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_init
</UL>

<P><STRONG><a name="[f9]"></a>GPIO_Pin_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys.o(i.GPIO_Pin_Get))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
</UL>

<P><STRONG><a name="[a7]"></a>GPIO_Pin_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys.o(i.GPIO_Pin_Set))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_20ms
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_10ms
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTRrgb_LED_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Stop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Start
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Send_Byte
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_NAck
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Ack
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init_CS
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init_CS
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init_CS
</UL>

<P><STRONG><a name="[d4]"></a>GPIO_Set</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, sys.o(i.GPIO_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTRrgb_LED_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init_CS
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init_CS
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init_CS
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_init
</UL>

<P><STRONG><a name="[c5]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32f7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[ce]"></a>HAL_GPIO_Init</STRONG> (Thumb, 484 bytes, Stack size 24 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>

<P><STRONG><a name="[93]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Read_Data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Read_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Read_Data
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BMI055_AccWriterReg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Gyro_Chip_Identification
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Acc_Chip_Identification
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_WriteRegister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_ReadRegister
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_WriteRegister
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_ReadRegister
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_WriteRegister
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteMemory
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteByte
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadMemory
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadByte
</UL>

<P><STRONG><a name="[c6]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[134]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cc]"></a>HAL_SD_Get_CardInfo</STRONG> (Thumb, 750 bytes, Stack size 24 bytes, stm32f7xx_hal_sd.o(i.HAL_SD_Get_CardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SD_Get_CardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[c7]"></a>HAL_SD_Init</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, stm32f7xx_hal_sd.o(i.HAL_SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_SD_Init &rArr; SD_PowerON &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Get_CardInfo
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select_Deselect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[c8]"></a>HAL_SD_MspInit</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, drv_sdcard.o(i.HAL_SD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[cf]"></a>HAL_SD_WideBusOperation_Config</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, stm32f7xx_hal_sd.o(i.HAL_SD_WideBusOperation_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_SD_WideBusOperation_Config &rArr; SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Disable
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[d2]"></a>HAL_SPI_Init</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, stm32f7xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[d3]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, drv_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_MspInit &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[d6]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, stm32f7xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Read_Data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Read_Data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BMI055_AccWriterReg
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_WriteRegister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_ReadRegister
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_WriteRegister
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_ReadRegister
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
</UL>

<P><STRONG><a name="[d8]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 870 bytes, Stack size 40 bytes, stm32f7xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Read_Data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Read_Data
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_ReadRegister
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_ReadRegister
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[13b]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[da]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_sbus.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = HAL_SYSTICK_Callback &rArr; timer_cb &rArr; Sbus_Parser &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f7xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = HAL_SYSTICK_IRQHandler &rArr; HAL_SYSTICK_Callback &rArr; timer_cb &rArr; Sbus_Parser &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[dd]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, stm32f7xx_hal_tim_ex.o(i.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC6_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_PWM_Init
</UL>

<P><STRONG><a name="[e4]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_TIM_PWM_Init &rArr; HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_PWM_Init
</UL>

<P><STRONG><a name="[e5]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, drv_pwm.o(i.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[e7]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_PWM_Init
</UL>

<P><STRONG><a name="[136]"></a>HAL_TIM_ReadCapturedValue</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_ReadCapturedValue))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>ICM_20602_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, drv_icm20602.o(i.ICM_20602_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ICM_20602_Init &rArr; ICM_20602_SpiDetect &rArr; ICM_20602_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_WriteRegister
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_SpiDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[eb]"></a>ICM_20602_ReadRegister</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, drv_icm20602.o(i.ICM_20602_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ICM_20602_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_SpiDetect
</UL>

<P><STRONG><a name="[ec]"></a>ICM_20602_Read_Data</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, drv_icm20602.o(i.ICM_20602_Read_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ICM_20602_Read_Data &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_2ms
</UL>

<P><STRONG><a name="[ea]"></a>ICM_20602_SpiDetect</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_icm20602.o(i.ICM_20602_SpiDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ICM_20602_SpiDetect &rArr; ICM_20602_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Init
</UL>

<P><STRONG><a name="[e9]"></a>ICM_20602_WriteRegister</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_icm20602.o(i.ICM_20602_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ICM_20602_WriteRegister &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Init
</UL>

<P><STRONG><a name="[a8]"></a>ICM_20689_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, drv_icm20689.o(i.ICM_20689_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ICM_20689_Init &rArr; ICM_20689_SpiDetect &rArr; ICM_20689_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_WriteRegister
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_SpiDetect
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[ef]"></a>ICM_20689_ReadRegister</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, drv_icm20689.o(i.ICM_20689_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ICM_20689_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_SpiDetect
</UL>

<P><STRONG><a name="[f0]"></a>ICM_20689_Read_Data</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, drv_icm20689.o(i.ICM_20689_Read_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ICM_20689_Read_Data &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_2ms
</UL>

<P><STRONG><a name="[ee]"></a>ICM_20689_SpiDetect</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_icm20689.o(i.ICM_20689_SpiDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ICM_20689_SpiDetect &rArr; ICM_20689_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Init
</UL>

<P><STRONG><a name="[ed]"></a>ICM_20689_WriteRegister</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_icm20689.o(i.ICM_20689_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ICM_20689_WriteRegister &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Init
</UL>

<P><STRONG><a name="[f1]"></a>IIC3_Ack</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, drv_iic.o(i.IIC3_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC3_Ack &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
</UL>

<P><STRONG><a name="[a5]"></a>IIC3_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_iic.o(i.IIC3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IIC3_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[f2]"></a>IIC3_NAck</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, drv_iic.o(i.IIC3_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
</UL>

<P><STRONG><a name="[f3]"></a>IIC3_Read_1Byte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, drv_iic.o(i.IIC3_Read_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IIC3_Read_1Byte &rArr; IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Stop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Start
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Send_Byte
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_ReadReg
</UL>

<P><STRONG><a name="[f8]"></a>IIC3_Read_Byte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, drv_iic.o(i.IIC3_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Get
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_NAck
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Ack
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>

<P><STRONG><a name="[f5]"></a>IIC3_Send_Byte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, drv_iic.o(i.IIC3_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC3_Send_Byte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Write_1Byte
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>

<P><STRONG><a name="[f4]"></a>IIC3_Start</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, drv_iic.o(i.IIC3_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC3_Start &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Write_1Byte
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>

<P><STRONG><a name="[f7]"></a>IIC3_Stop</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, drv_iic.o(i.IIC3_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC3_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Write_1Byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>

<P><STRONG><a name="[f6]"></a>IIC3_Wait_Ack</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, drv_iic.o(i.IIC3_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC3_Wait_Ack &rArr; IIC3_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Get
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Stop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Write_1Byte
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>

<P><STRONG><a name="[fa]"></a>IIC3_Write_1Byte</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drv_iic.o(i.IIC3_Write_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IIC3_Write_1Byte &rArr; IIC3_Wait_Ack &rArr; IIC3_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Stop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Start
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_WriteReg
</UL>

<P><STRONG><a name="[aa]"></a>IST8310_Detect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_ist8310.o(i.IST8310_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = IST8310_Detect &rArr; IST8310_ReadReg &rArr; IIC3_Read_1Byte &rArr; IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[a9]"></a>IST8310_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_ist8310.o(i.IST8310_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IST8310_Init &rArr; IST8310_WriteReg &rArr; IIC3_Write_1Byte &rArr; IIC3_Wait_Ack &rArr; IIC3_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[fd]"></a>IST8310_Update</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, drv_ist8310.o(i.IST8310_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = IST8310_Update &rArr; IST8310_ReadReg &rArr; IIC3_Read_1Byte &rArr; IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_20ms
</UL>

<P><STRONG><a name="[9f]"></a>LED_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, drv_led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LED_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[a0]"></a>LTRrgb_LED_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, drv_ltr.o(i.LTRrgb_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LTRrgb_LED_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[fe]"></a>Loop_Schedule</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, scheduler.o(i.Loop_Schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Loop_Schedule &rArr; Loop_Task_2ms &rArr; ICM_20689_Read_Data &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_90ms
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_80ms
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_5ms
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_50ms
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_2ms
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_25ms
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_20ms
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_1ms
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_10ms
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_100ms
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>Loop_Task_100ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_100ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[102]"></a>Loop_Task_10ms</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, scheduler.o(i.Loop_Task_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Loop_Task_10ms &rArr; MS5611_Update &rArr; MS5611_Read_Adc_Temperature &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[ff]"></a>Loop_Task_1ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, scheduler.o(i.Loop_Task_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Loop_Task_1ms &rArr; Communicate_DT_Data_Exchange &rArr; Communicate_DT_Send_Status &rArr; Communicate_DT_Send_Data &rArr; Usart2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Exchange
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[103]"></a>Loop_Task_20ms</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, scheduler.o(i.Loop_Task_20ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Loop_Task_20ms &rArr; IST8310_Update &rArr; IST8310_ReadReg &rArr; IIC3_Read_1Byte &rArr; IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Update
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[104]"></a>Loop_Task_25ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_25ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[100]"></a>Loop_Task_2ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scheduler.o(i.Loop_Task_2ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Loop_Task_2ms &rArr; ICM_20689_Read_Data &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Read_Data
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Read_Data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Read_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[105]"></a>Loop_Task_50ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_50ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[101]"></a>Loop_Task_5ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_5ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[106]"></a>Loop_Task_80ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_80ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[107]"></a>Loop_Task_90ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_Task_90ms))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
</UL>

<P><STRONG><a name="[138]"></a>Loop_check</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, systick.o(i.Loop_check))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Trigger_Start
</UL>

<P><STRONG><a name="[112]"></a>MS5611_BaroAltCalculate</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, drv_ms5611.o(i.MS5611_BaroAltCalculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MS5611_BaroAltCalculate
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
</UL>

<P><STRONG><a name="[a4]"></a>MS5611_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MS5611_Init &rArr; MS5611_Read_Prom &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_Temperature
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Reset
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Prom
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[10d]"></a>MS5611_ReadRegister</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, drv_ms5611.o(i.MS5611_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Prom
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Adc_Temperature
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Adc_Pressure
</UL>

<P><STRONG><a name="[10e]"></a>MS5611_Read_Adc_Pressure</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Read_Adc_Pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MS5611_Read_Adc_Pressure &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
</UL>

<P><STRONG><a name="[10f]"></a>MS5611_Read_Adc_Temperature</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Read_Adc_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MS5611_Read_Adc_Temperature &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
</UL>

<P><STRONG><a name="[10b]"></a>MS5611_Read_Prom</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, drv_ms5611.o(i.MS5611_Read_Prom))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MS5611_Read_Prom &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[10a]"></a>MS5611_Reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MS5611_Reset &rArr; delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[111]"></a>MS5611_Start_Press</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Start_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MS5611_Start_Press &rArr; MS5611_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
</UL>

<P><STRONG><a name="[10c]"></a>MS5611_Start_Temperature</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Start_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MS5611_Start_Temperature &rArr; MS5611_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Update
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[109]"></a>MS5611_Update</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, drv_ms5611.o(i.MS5611_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MS5611_Update &rArr; MS5611_Read_Adc_Temperature &rArr; MS5611_ReadRegister &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_Temperature
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_Press
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Adc_Temperature
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Adc_Pressure
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_BaroAltCalculate
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Task_10ms
</UL>

<P><STRONG><a name="[110]"></a>MS5611_WriteRegister</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, drv_ms5611.o(i.MS5611_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MS5611_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_Temperature
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_Press
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Reset
</UL>

<P><STRONG><a name="[114]"></a>MY_NVIC_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sys.o(i.MY_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_init
</UL>

<P><STRONG><a name="[115]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sys.o(i.MY_NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[133]"></a>MY_NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(i.MY_NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[137]"></a>PPM_Signal_Analysis</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, drv_ppm.o(i.PPM_Signal_Analysis))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[ae]"></a>Radio_init_in</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, radio.o(i.Radio_init_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Radio_init_in &rArr; Sbus_Init &rArr; USART3_init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_set_range
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_set_default_dead_zone
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_set_angle
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sbus_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[117]"></a>Radio_set_angle</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, radio.o(i.Radio_set_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Radio_set_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
</UL>

<P><STRONG><a name="[119]"></a>Radio_set_default_dead_zone</STRONG> (Thumb, 10 bytes, Stack size 24 bytes, radio.o(i.Radio_set_default_dead_zone))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Radio_set_default_dead_zone
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
</UL>

<P><STRONG><a name="[118]"></a>Radio_set_range</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, radio.o(i.Radio_set_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Radio_set_range
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
</UL>

<P><STRONG><a name="[120]"></a>SDMMC_DataConfig</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDMMC_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[11b]"></a>SDMMC_GetCommandResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp6Error
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
</UL>

<P><STRONG><a name="[122]"></a>SDMMC_GetPowerState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
</UL>

<P><STRONG><a name="[11c]"></a>SDMMC_GetResponse</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_GetResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Disable
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp6Error
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
</UL>

<P><STRONG><a name="[c9]"></a>SDMMC_Init</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SDMMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WideBusOperation_Config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[124]"></a>SDMMC_PowerState_ON</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_PowerState_ON))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[121]"></a>SDMMC_ReadFIFO</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_ReadFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[11f]"></a>SDMMC_SendCommand</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f7xx_ll_sdmmc.o(i.SDMMC_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDMMC_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Disable
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select_Deselect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[ac]"></a>SD_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, drv_sdcard.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = SD_Init &rArr; HAL_SD_WideBusOperation_Config &rArr; SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WideBusOperation_Config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[a1]"></a>SPI1_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, drv_spi.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SPI1_Init &rArr; SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_SetSpeed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init_CS
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[129]"></a>SPI1_Init_CS</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, drv_spi.o(i.SPI1_Init_CS))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI1_Init_CS &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[94]"></a>SPI1_ReadWriteByte</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_spi.o(i.SPI1_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPI1_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Read_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Gyro_Chip_Identification
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Acc_Chip_Identification
</UL>

<P><STRONG><a name="[128]"></a>SPI1_SetSpeed</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, drv_spi.o(i.SPI1_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[a2]"></a>SPI2_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, drv_spi.o(i.SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SPI2_Init &rArr; SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init_CS
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[12b]"></a>SPI2_Init_CS</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, drv_spi.o(i.SPI2_Init_CS))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI2_Init_CS &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[c0]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_spi.o(i.SPI2_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPI2_ReadWriteByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteMemory
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteByte
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadMemory
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_ReadByte
</UL>

<P><STRONG><a name="[12a]"></a>SPI2_SetSpeed</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, drv_spi.o(i.SPI2_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[a3]"></a>SPI4_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, drv_spi.o(i.SPI4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI4_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_SetSpeed
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_ReadWriteByte
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init_CS
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[12d]"></a>SPI4_Init_CS</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, drv_spi.o(i.SPI4_Init_CS))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI4_Init_CS &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pin_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init
</UL>

<P><STRONG><a name="[113]"></a>SPI4_ReadWriteByte</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, drv_spi.o(i.SPI4_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_WriteRegister
</UL>

<P><STRONG><a name="[12c]"></a>SPI4_SetSpeed</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, drv_spi.o(i.SPI4_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4_Init
</UL>

<P><STRONG><a name="[98]"></a>SPI_BMI055_AccWriterReg</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drv_bmi055.o(i.SPI_BMI055_AccWriterReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_BMI055_AccWriterReg &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Init
</UL>

<P><STRONG><a name="[ad]"></a>Sbus_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_sbus.o(i.Sbus_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Sbus_Init &rArr; USART3_init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radio_init_in
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[130]"></a>Sbus_Parser</STRONG> (Thumb, 178 bytes, Stack size 320 bytes, drv_sbus.o(i.Sbus_Parser))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = Sbus_Parser &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>

<P><STRONG><a name="[9d]"></a>Stm32_Clock_Init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sys.o(i.Stm32_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Stm32_Clock_Init &rArr; Sys_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clock_Set
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_SetVectorTable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f765_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler &rArr; HAL_SYSTICK_Callback &rArr; timer_cb &rArr; Sbus_Parser &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Trigger_Start
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[132]"></a>Sys_Clock_Set</STRONG> (Thumb, 264 bytes, Stack size 20 bytes, sys.o(i.Sys_Clock_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sys_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[af]"></a>TIM1_PWM_Init</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, drv_pwm.o(i.TIM1_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIM1_PWM_Init &rArr; HAL_TIM_PWM_Init &rArr; HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[2c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, drv_ppm.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ReadCapturedValue
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPM_Signal_Analysis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[e8]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>

<P><STRONG><a name="[de]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[df]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[e0]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[e1]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32f7xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[135]"></a>Task_Trigger_Start</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, systick.o(i.Task_Trigger_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Task_Trigger_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[34]"></a>USART2_IRQHandler</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, stm32f765_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; Communicate_DT_Data_Receive_Prepare &rArr; Communicate_DT_Data_Receive_Anl
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Data_Receive_Prepare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f765_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART3_IRQHandler &rArr; Usart3_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f765xx.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>USART3_init</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, drv_uart.o(i.USART3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART3_init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sbus_Init
</UL>

<P><STRONG><a name="[bf]"></a>Usart2_Send</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, drv_uart.o(i.Usart2_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Usart2_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_DT_Send_Data
</UL>

<P><STRONG><a name="[139]"></a>Usart3_isr</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, drv_uart.o(i.Usart3_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Usart3_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_recv_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>Usart3_recv_cb</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_uart.o(i.Usart3_recv_cb))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_isr
</UL>

<P><STRONG><a name="[8c]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drv_uart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[9e]"></a>delay_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, systick.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[99]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, systick.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_Detect
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_SpiDetect
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_SpiDetect
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Reset
</UL>

<P><STRONG><a name="[9b]"></a>delay_us</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, systick.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMI055_Read_Data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20689_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICM_20602_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Wait_Ack
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Stop
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Start
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Send_Byte
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_Byte
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_NAck
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Ack
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteMemory
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM25V01G_WriteByte
</UL>

<P><STRONG><a name="[b0]"></a>fifo_init</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, mavlink_usart_fifo.o(i.fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[87]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, arducopter.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; Board_Init &rArr; SD_Init &rArr; HAL_SD_WideBusOperation_Config &rArr; SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_Schedule
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[db]"></a>timer_cb</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_sbus.o(i.timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = timer_cb &rArr; Sbus_Parser &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sbus_Parser
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[81]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[16d]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[16e]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[fb]"></a>IST8310_ReadReg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_ist8310.o(i.IST8310_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IST8310_ReadReg &rArr; IIC3_Read_1Byte &rArr; IIC3_Read_Byte &rArr; IIC3_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Read_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Update
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Detect
</UL>

<P><STRONG><a name="[fc]"></a>IST8310_WriteReg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, drv_ist8310.o(i.IST8310_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = IST8310_WriteReg &rArr; IIC3_Write_1Byte &rArr; IIC3_Wait_Ack &rArr; IIC3_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC3_Write_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IST8310_Init
</UL>

<P><STRONG><a name="[b2]"></a>SCB_EnableDCache</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, sys.o(i.SCB_EnableDCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Enable
</UL>

<P><STRONG><a name="[d7]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f7xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[12e]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f7xx_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[d9]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, stm32f7xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[125]"></a>SD_CmdError</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f7xx_hal_sd.o(i.SD_CmdError))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SD_CmdError
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[11a]"></a>SD_CmdResp1Error</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, stm32f7xx_hal_sd.o(i.SD_CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCommandResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Disable
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select_Deselect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[123]"></a>SD_CmdResp2Error</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f7xx_hal_sd.o(i.SD_CmdResp2Error))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
</UL>

<P><STRONG><a name="[127]"></a>SD_CmdResp3Error</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f7xx_hal_sd.o(i.SD_CmdResp3Error))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[11d]"></a>SD_CmdResp6Error</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, stm32f7xx_hal_sd.o(i.SD_CmdResp6Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_CmdResp6Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCommandResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize_Cards
</UL>

<P><STRONG><a name="[126]"></a>SD_CmdResp7Error</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, stm32f7xx_hal_sd.o(i.SD_CmdResp7Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SD_CmdResp7Error
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[11e]"></a>SD_FindSCR</STRONG> (Thumb, 346 bytes, Stack size 72 bytes, stm32f7xx_hal_sd.o(i.SD_FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_DataConfig
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WideBus_Disable
</UL>

<P><STRONG><a name="[cb]"></a>SD_Initialize_Cards</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, stm32f7xx_hal_sd.o(i.SD_Initialize_Cards))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_Initialize_Cards &rArr; SD_CmdResp6Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp6Error
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp2Error
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetPowerState
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[ca]"></a>SD_PowerON</STRONG> (Thumb, 360 bytes, Stack size 48 bytes, stm32f7xx_hal_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_PowerON &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp7Error
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp3Error
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdError
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_PowerState_ON
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[cd]"></a>SD_Select_Deselect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, stm32f7xx_hal_sd.o(i.SD_Select_Deselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_Select_Deselect &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[d1]"></a>SD_WideBus_Disable</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, stm32f7xx_hal_sd.o(i.SD_WideBus_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SD_WideBus_Disable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WideBusOperation_Config
</UL>

<P><STRONG><a name="[d0]"></a>SD_WideBus_Enable</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, stm32f7xx_hal_sd.o(i.SD_WideBus_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SD_WideBus_Enable &rArr; SD_FindSCR &rArr; SD_CmdResp1Error &rArr; SDMMC_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_CmdResp1Error
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_SendCommand
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WideBusOperation_Config
</UL>

<P><STRONG><a name="[e2]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f7xx_hal_tim_ex.o(i.TIM_OC5_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC5_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[e3]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, stm32f7xx_hal_tim_ex.o(i.TIM_OC6_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC6_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
